#!/bin/bash

set -e

# Get directory of executing script regardless of where it is called from (with some caveats)
# See https://stackoverflow.com/questions/59895/how-to-get-the-source-directory-of-a-bash-script-from-within-the-script-itself
export DOTFILES_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Install python3/ansible/stow
if [ "$OSTYPE" == "linux-gnu" ]; then
  DISTRIBUTION=$(uname -v)
  if [[ "$DISTRIBUTION" == *"Ubuntu"* ]]; then
    sudo apt -y update
    sudo apt -y upgrade
    sudo apt -y install python3 ansible stow
  else
    echo "Distribution ($DISTRIBUTION) not supported at the moment"
  fi
elif [ "$OSTYPE" == "darwin" ]; then
  echo "MacOS is not supported at this moment"
else
  echo "$OSTYPE is not supported"
fi

if ! [ -x "$(command -v ansible-playbook)" ]; then
  echo 'Error: ansible was not installed.' >&2
  exit 1
fi

if [ $1 == 'init' ]; then
  ansible-playbook -v --inventory $DOTFILES_DIR/ansible/hosts $DOTFILES_DIR/ansible/playbook.yml --tags shell --extra-vars "dotfiles_dir=$DOTFILES_DIR"
  stow -d $DOTFILES_DIR/stow -t $HOME zsh
else
  ansible-playbook -v --inventory $DOTFILES_DIR/ansible/hosts $DOTFILES_DIR/ansible/playbook.yml --tags package_managers --extra-vars "dotfiles_dir=$DOTFILES_DIR"
  [ -f /home/linuxbrew/.linuxbrew/bin/brew ] && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

  ansible-playbook -v --inventory $DOTFILES_DIR/ansible/hosts $DOTFILES_DIR/ansible/playbook.yml --tags packages --extra-vars "dotfiles_dir=$DOTFILES_DIR"

  # TODO: Delete auto generated .clojure directory

  # - name: Delete auto generated .clojure directory
  #   file:
  #     state: absent
  #     path: ~/.clojure

  stow -d $DOTFILES_DIR/stow -t $HOME clojure git nvim tmux
  # echo "Generate ssh key manually"
  # echo "https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"
fi

echo "Restart Computer"
