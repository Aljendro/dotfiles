---
- name: Update and upgrade apt packages
  become: yes
  apt:
    upgrade: yes
    update_cache: yes

- name: Installing Apt Packages
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - curl
    - neovim

- name: Install Vim-Plug package manager
  command:
    cmd: sh -c 'curl -fLo $HOME/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    creates: ~/.local/share/nvim/site/autoload/plug.vim

- name: Linking .vimrc
  file:
    src: "{{ role_path }}/files/vimrc"
    dest: ~/.vimrc
    state: link
    mode: u+rwx,g+rx,o+rx

- name: Creating neovim directory
  file:
    path: ~/.config/nvim
    state: directory
    mode: '0700'

- name: Creating neovim after directory
  file:
    path: ~/.config/nvim/after
    state: directory
    mode: '0700'

- name: Creating session directory
  file:
    path: ~/.config/nvim/session
    state: directory
    mode: '0700'

- name: Creating coc directory
  file:
    path: ~/.config/coc
    state: directory
    mode: '0700'

- name: Linking init.vim for neovim
  file:
    src: "{{ role_path }}/files/init.vim"
    dest: ~/.config/nvim/init.vim
    state: link
    mode: u+rwx,g+rx,o+rx

- name: Linking ftplugin for neovim
  file:
    src: "{{ role_path }}/files/ftplugin"
    dest: ~/.config/nvim/after/ftplugin
    state: link
    mode: u+rwx,g+rx,o+rx

# - name: Linking ftdetect for neovim
  # file:
    # src: "{{ role_path }}/files/ftdetect"
    # dest: ~/.config/nvim/after/ftdetect
    # state: link
    # mode: u+rwx,g+rx,o+rx

- name: Linking coc-settings for neovim
  file:
    src: "{{ role_path }}/files/coc-settings.json"
    dest: ~/.config/nvim/coc-settings.json
    state: link
    mode: u+rwx,g+rx,o+rx

- name: Linking snippets directory for neovim
  file:
    src: "{{ role_path }}/files/snippets"
    dest: ~/.config/coc/ultisnips
    state: link
    mode: u+rwx,g+rx,o+rx

- name: Install plugins
  command: nvim +PlugInstall +qall

- name: Installing Node.js provider and LSP plugins
  shell: "{{ role_path }}/files/install-lsp.sh"
  args:
    executable: /bin/bash


