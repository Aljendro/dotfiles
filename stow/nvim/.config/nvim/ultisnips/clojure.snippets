snippet def "Defines a var"
(def $1 $2)
endsnippet

snippet defn "Defines a function"
(defn $1
	[$2]$3)
endsnippet

snippet let "Let statement"
(let [$1] ${VISUAL}$2)
endsnippet

snippet if "If Statement"
(if $1 ${VISUAL})
endsnippet

snippet if "When Statement"
(when $1 ${VISUAL})
endsnippet

snippet defp "Defines a protocol"
(defprotocol $1
	($2)$3)
endsnippet

snippet dk "Destructure keys" i
{:keys [$1]}$2
endsnippet

snippet lr "Loop Recur"
(loop [$1]
	${VISUAL}$2
	(recur $3))
endsnippet

snippet tc "Try Catch"
(try
	${VISUAL}$1
	(catch $2 e$3))
endsnippet

snippet tc "Try Finally"
(try
	${VISUAL}$1
	(finally$2))
endsnippet

snippet tcf "Try Catch Finally"
(try
	${VISUAL}$1
	(catch $2 e
		$3)
	$4
	(finally
		$5))
endsnippet

snippet clg "JS console log" i
(js/console.log "$1"$2)
endsnippet

snippet cle "JS console error" i
(js/console.error "$1"$2)
endsnippet
